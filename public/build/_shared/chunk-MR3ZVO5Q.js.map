{
  "version": 3,
  "sources": ["../../../app/routes/app.cancelBtn.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/app.cancelBtn.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/app.cancelBtn.tsx\");\n  import.meta.hot.lastModified = \"1707767899141.8267\";\n}\n// REMIX HMR END\n\nimport { Form, useActionData, useSubmit } from \"@remix-run/react\";\nimport { Button } from \"@shopify/polaris\";\nimport React from \"react\";\nimport { MONTHLY_PLAN, authenticate } from \"~/shopify.server\";\nexport const action = async ({\n  request\n}) => {\n  console.log('hitt');\n  const {\n    billing\n  } = await authenticate.admin(request);\n  const billingCheck = await billing.require({\n    plans: [MONTHLY_PLAN],\n    isTest: true,\n    onFailure: async () => billing.request({\n      plan: MONTHLY_PLAN,\n      isTest: true\n    })\n  });\n  const subscription = billingCheck.appSubscriptions[0];\n  const canceledsusbscription = await billing.cancel({\n    subscriptionId: subscription.id,\n    isTest: true,\n    prorate: true\n  });\n  console.log('canceledsusbscription', canceledsusbscription);\n  if (canceledsusbscription) {\n    console.log('Unsubscribed');\n    return canceledsusbscription;\n  }\n  return null;\n};\nconst CancelBtn = props => {\n  _s();\n  const submit = useSubmit();\n  const actionData = useActionData();\n  console.log(actionData, 'actionData');\n  const startSub = () => submit({}, {\n    replace: true,\n    method: 'POST'\n  });\n  return <Form onSubmit={startSub} method=\"post\" action=\"/app/cancelBtn\">\n            <div style={{\n      paddingTop: '10px '\n    }}>\n                <Button fullWidth submit variant=\"primary\" onClick={startSub}>Cancel Subscription</Button>\n            </div>\n        </Form>;\n};\n_s(CancelBtn, \"Yxj8dhdFb1uLGQu12Rxh4tfD7Eo=\", false, function () {\n  return [useSubmit, useActionData];\n});\n_c = CancelBtn;\nexport default CancelBtn;\nvar _c;\n$RefreshReg$(_c, \"CancelBtn\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAYA;AASA;AACAA;AAEA,qBAA2C;AA0C3B;AAjEhB,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,mCAAqC,EAAE;AAAA,EAChF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA8B;AAC9B,cAAY,IAAI,eAAe;AACjC;AAmCA,IAAM,YAAY,WAAS;AACzB,KAAG;AACH,QAAM,SAAS,UAAU;AACzB,QAAM,aAAa,cAAc;AACjC,UAAQ,IAAI,YAAY,YAAY;AACpC,QAAM,WAAW,MAAM,OAAO,CAAC,GAAG;AAAA,IAChC,SAAS;AAAA,IACT,QAAQ;AAAA,EACV,CAAC;AACD,SAAO,mDAAC,QAAK,UAAU,UAAU,QAAO,QAAO,QAAO,kBAC5C,6DAAC,SAAI,OAAO;AAAA,IAClB,YAAY;AAAA,EACd,GACY,6DAAC,UAAO,WAAS,MAAC,QAAM,MAAC,SAAQ,WAAU,SAAS,UAAU,mCAA9D;AAAA;AAAA;AAAA;AAAA,SAAiF,KAHrF;AAAA;AAAA;AAAA;AAAA,SAIA,KALH;AAAA;AAAA;AAAA;AAAA,SAMD;AACR;AACA,GAAG,WAAW,gCAAgC,OAAO,WAAY;AAC/D,SAAO,CAAC,WAAW,aAAa;AAClC,CAAC;AACD,KAAK;AACL,IAAO,wBAAQ;AACf,IAAI;AACJ,aAAa,IAAI,WAAW;AAE5B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["init_esm"]
}
