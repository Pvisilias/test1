{
  "version": 3,
  "sources": ["../../../app/routes/app.subscriptionBtn.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/app.subscriptionBtn.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/app.subscriptionBtn.tsx\");\n  import.meta.hot.lastModified = \"1707767900154.9504\";\n}\n// REMIX HMR END\n\nimport { Form, useActionData, useSubmit } from \"@remix-run/react\";\nimport { Button } from \"@shopify/polaris\";\nimport React from \"react\";\nimport { MONTHLY_PLAN, authenticate } from \"~/shopify.server\";\nexport const action = async ({\n  request\n}) => {\n  console.log('hitt');\n  const {\n    billing\n  } = await authenticate.admin(request);\n  await billing.require({\n    plans: [MONTHLY_PLAN],\n    isTest: true,\n    onFailure: async () => billing.request({\n      plan: MONTHLY_PLAN,\n      isTest: true\n    })\n  });\n  return null;\n};\nconst SubscriptionBtn = props => {\n  _s();\n  const submit = useSubmit();\n  const actionData = useActionData();\n  console.log(actionData, 'actionData');\n  const startSub = () => submit({}, {\n    replace: true,\n    method: 'POST'\n  });\n  return <Form onSubmit={startSub} method=\"post\" action=\"/app/subscriptionBtn\">\n            <Button fullWidth submit variant=\"primary\" tone=\"success\" onClick={startSub}>Choose Plan</Button>\n        </Form>;\n};\n_s(SubscriptionBtn, \"Yxj8dhdFb1uLGQu12Rxh4tfD7Eo=\", false, function () {\n  return [useSubmit, useActionData];\n});\n_c = SubscriptionBtn;\nexport default SubscriptionBtn;\nvar _c;\n$RefreshReg$(_c, \"SubscriptionBtn\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAYA;AASA;AACAA;AAEA,qBAA2C;AA4B/B;AAnDZ,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,yCAA2C,EAAE;AAAA,EACtF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAoC;AACpC,cAAY,IAAI,eAAe;AACjC;AAwBA,IAAM,kBAAkB,WAAS;AAC/B,KAAG;AACH,QAAM,SAAS,UAAU;AACzB,QAAM,aAAa,cAAc;AACjC,UAAQ,IAAI,YAAY,YAAY;AACpC,QAAM,WAAW,MAAM,OAAO,CAAC,GAAG;AAAA,IAChC,SAAS;AAAA,IACT,QAAQ;AAAA,EACV,CAAC;AACD,SAAO,mDAAC,QAAK,UAAU,UAAU,QAAO,QAAO,QAAO,wBAC5C,6DAAC,UAAO,WAAS,MAAC,QAAM,MAAC,SAAQ,WAAU,MAAK,WAAU,SAAS,UAAU,2BAA7E;AAAA;AAAA;AAAA;AAAA,SAAwF,KAD3F;AAAA;AAAA;AAAA;AAAA,SAED;AACR;AACA,GAAG,iBAAiB,gCAAgC,OAAO,WAAY;AACrE,SAAO,CAAC,WAAW,aAAa;AAClC,CAAC;AACD,KAAK;AACL,IAAO,8BAAQ;AACf,IAAI;AACJ,aAAa,IAAI,iBAAiB;AAElC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["init_esm"]
}
